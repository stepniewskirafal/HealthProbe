# --- Service ---
spring.application.name=data-aggregator-analyzer-ms3
server.port=9090


# --- App props ---
app.kafka-in-topic=system-metrics
app.kafka-out-topic=ram-alerts


# --- Kafka common (override per env as needed) ---
# --- SerDes (jawne) ---
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.ms3.domain.SystemMetrics
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.ms3.domain

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false

spring.kafka.producer.properties.max.in.flight.requests.per.connection=1

spring.kafka.listener.ack-mode=BATCH
spring.kafka.listener.concurrency=3

app.kafka-dlt-topic=metrics.raw.DLT

# broker (je?li nie masz w innym miejscu)
spring.kafka.bootstrap-servers=localhost:9092

# >>> najwa?niejsze <<<
spring.kafka.consumer.group-id=data-aggregator-analyzer-ms3

# (dev) wygodne przy pierwszym uruchomieniu:
spring.kafka.consumer.auto-offset-reset=earliest

# --- Actuator/Micrometer ---
management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.probes.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true